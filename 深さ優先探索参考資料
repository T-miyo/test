"""
2020/12/30
@Yuya Shimizu

番兵
迷路探索２（単純な深さ優先探索）
"""

#探索関数：ゴールしたらそのときの位置・移動数を返す
def Maze(x, y, depth):
    #ゴールについた時点で終了
    if maze[x][y] == 1:
        print([(x, y), depth])

    #探索済みとしてセット
    maze[x][y] = 2

    #現在位置の上下左右を探索：〇<2は壁でもなく探索済みでもないものを示す
    if maze[x-1][y] < 2:#左
        Maze(x-1, y, depth + 1)
    if maze[x+1][y] < 2:#右
        Maze(x+1, y, depth + 1)
    if maze[x][y-1] < 2:#上
        Maze(x, y-1, depth + 1)
    if maze[x][y+1] < 2:#下
        Maze(x, y+1, depth + 1)

    #探索前に戻す
    maze[x][y] = 0

if __name__ == '__main__':
    #迷路作成
    maze = [
                [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                [9, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 9],
                [9, 0, 9, 0, 0, 0, 9, 9, 0, 9, 0, 9],
                [9, 0, 9, 9, 0, 9, 0, 0, 0, 9, 0, 9],
                [9, 0, 0, 0, 9, 0, 0, 9, 9, 0, 9, 9],
                [9, 9, 9, 0, 0, 9, 0, 9, 0, 0, 0, 9],
                [9, 0, 0, 0, 9, 0, 9, 0, 0, 9, 1, 9],
                [9, 0, 9, 0, 0, 0, 0, 9, 0, 0, 9, 9],
                [9, 0, 0, 9, 0, 9, 0, 0, 9, 0, 0, 9],
                [9, 0, 9, 0, 9, 0, 9, 0, 0, 9, 0, 9],
                [9, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 9],
                [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9]
                ]

    result = Maze(1, 1, 0)  #探索
