#実務で関われない為、実践レベルのデータ分析を行うための基本的な作業を学ぶ事が目的
#pythonでpandasを使用して作業しながらやってみる

1、csvファイルのデータをディレクトリ設定して読み込んで「home_data.describe()」で表示
import pandas as pd

# Path of the file to read
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

# Fill in the line below to read the file into a variable home_data
home_data = pd.read_csv(iowa_file_path)

# Call line below with no argument to check that you've loaded the data correctly
step_1.check()

# Print summary statistics in next line
home_data.describe()

2、表示されたデータから直接数値を設定
# What is the average lot size (rounded to nearest integer)?
avg_lot_size = 10517

# As of today, how old is the newest home (current year - the date in which it was built)
newest_home_age = 14

# Checks your answers
step_2.check()

3、「melbourne_data.columns」でデータの項目を表示して使う項目を確認
(読み込んだデータフレーム).columns

4、実践では欠損値がある為考慮した処理が必要になる
演習では「melbourne_data = melbourne_data.dropna(axis=0)」で欠損を削除している

5、予測ターゲットをyに設定する
今回は住宅価格なので「y = melbourne_data.Price」

6、予測で使用する特徴の項目(列)を選択する
「melbourne_features = ['Rooms', 'Bathroom', 'Landsize', 'Lattitude', 'Longtitude']
　X = melbourne_data[melbourne_features]」

7、「X.describe()」と「X.head()」で住宅価格を予測するために使用するデータを簡単に確認
　headメゾットは先頭から5つまでのデータを表示

8、scikit-learn ライブラリを使用してモデルを作成
「from sklearn.tree import DecisionTreeRegressor

# Define model. Specify a number for random_state to ensure same results each run
melbourne_model = DecisionTreeRegressor(random_state=1)

# Fit model
melbourne_model.fit(X, y)」
チュートリアルの為、トレーニングデータの最初の数行に対して予測してみる(実際には、すでに価格がわかっている住宅ではなく、市場に登場する新しい住宅を予測する必要がある)
「print("Making predictions for the following 5 houses:")
print(X.head())
print("The predictions are")
print(melbourne_model.predict(X.head()))」
