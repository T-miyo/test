人間が作成した文章には必ずといっていいほど表記揺れが存在します。
具体的な例をあげると以下のような例が存在します。

「株式会社」の有無による表記ゆれ
SIGNATE
SIGNATE株式会社
（株）SIGNATE
SIGNATE（株）
「・」の有無表記ゆれ
コカ・コーラ
コカコーラ
英語表記かカタカナ表記か
シグネイト
SIGNATE
4.　詳細企業名か、大本企業名かによる部分一致
SIGNATEホールディングス
SIGNATEテクノロジー
上記のように多種多様の表記揺れの種類があります。
今回はヒューリスティックな手法ではありますが、名寄せ用の置換辞書を用いて表記揺れを修正していきます。

まず、名寄せ用の置換辞書を作成します。辞書には置換したい文字列をキー、置換後の文字列をバリューとします。

replacement_dict = {
    'SIGNATE株式会社':'SIGNATE',
    '（株）SIGNATE':'SIGNATE',
    'SIGNATE（株）':'SIGNATE',
    'コカ・コーラ':'コカコーラ',
    'シグネイト':'SIGNATE',
    'SIGNATEホールディングス':'SIGNATE',
    'SIGNATEテクノロジー':'SIGNATE',

}

その置換用の辞書を元に正規表現を用いて文字列の置換を行います。
ライブラリreを使い、その中のre.compile()を用います。
re.compile()を使うと、正規表現パターン文字列をコンパイルして正規表現パターンオブジェクトを作成できます。

In [1]: # ライブラリのインポート
        import re
        
        # 正規表現パターンを置換用辞書を元に作成
        pattern = re.compile('|'.join(ｒeplacement_dict.keys()))
        pattern
        
Out[1]: re.compile(r'SIGNATE株式会社|（株）SIGNATE|SIGNATE（株）|コカ・コーラ|シグネイト|SIGNATEホールディングス|SIGNATEテクノロジー',re.UNICODE)
また動作確認用に例文を用意しましょう。※例文の内容は事実とは無関係であることご承知ください。

test_string = 'SIGNATEテクノロジーはコカ・コーラと協力し、シグネイトコカコーラコンペを開催した'
そこから、正規表現にパターンにマッチする物を.subを用いて置換を行い、辞書内のキーの数だけ実施します。

In [2]: result = pattern.sub(lambda x: ｒeplacement_dict[x.group()], test_string)
        result
        
Out[2]: SIGNATEはコカコーラと協力し、SIGNATEコカコーラコンペを開催した
うまく表記揺れを修正することができました。
置換用の辞書は各々の案件やPJにて、メンテナンスができるようにしておくと共通のドメイン知識もたまりやすくなります。
また、安倍晋三さんのツイートはデータ数も少なく、あまり表記揺れがなかったので上記の処理は実施しないことご認識ください。
