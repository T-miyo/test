ビニング①
売上データの中で、年代別に購入金額が異なるかどうかを調べたいときは、ビニングを行うことで簡単にデータを整理することができます。
**ビニング(binning)**とは連続値をビン(bin)と呼ばれる離散値に置き換える処理を指します。
つまり、ある変数の値を、複数の区分に分割することで、新しい特徴量を作ります。
年齢というカラムの中に、複数の年齢が入っています。これを年代という大まかな区切りを使って置き換えます。
ビニングを行うにはいくつか方法がありますが、ここではpandasライブラリのcut関数を使います。
cut関数は、データの値を元に、いくつかの区分に分割するための関数です。

データフレームの特定の列（カラム）を、境界値を指定して分割するには次のように記述します。

pd.cut(データフレーム[カラム名], [境界値1,境界値２,...],labels=[ラベル名１,ラベル名２,...])

以下の図のように、年齢を境界値を決めて分割すると

pd.cut(データフレーム["年齢"], [20,30,40],labels=["20代","30代"], right=False)

import pandas as pd
df = pd.read_excel('会員別課金額.xlsx')

df["bin"] = pd.cut(df["請求金額(割引前)"].rank(method='first'), [1000, 3000, 5000],labels=["Aランク", "Bランク", "Cランク"], right=False)

print(df["bin"].mode()[0])

pd.cut(データフレーム[カラム名], bins=引数,right=引数,labels=引数)

とある商品の販売データから、若者がどのくらい購入するかを調べたいとします。
このとき、若者の年齢を 20 ≦ 若者 ＜ 30 とするのか、20 ＜ 若者 ≦ 30 とするかで大きく変化するかもしれません。
このように年齢幅の右側と左側のどちらを以上にして未満にするかを決めることができる引数としてrightがあります。

right :Trueとすると右端の区間を含む。Falseで左端の区間を含む。
（例）right=Falseの場合、20以上30未満になります。一方、right=Trueの場合、21以上30以下になります。

自社の売上データを外部のデータ分析会社に委託したい場合は、個人情報のラベルを匿名化する必要があるかもしれません。
そのような時に、ラベルを変更できるのが引数labelsです。
labels：Falseとすると整数の数値が０から連番でラベル付けされる（labels =[20代,30代]のように自身でラベル付けをすることもできる）

df["ランク"] = pd.cut(df["アイテムB課金額"], bins=[0,5000,10000,50000],right=True,labels=False)
