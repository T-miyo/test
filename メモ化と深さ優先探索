#N 頂点からなる木が与えられます。 N - 1 個の辺について、 i 番目の辺は頂点 S_i と頂点 T_i をつないでおり、その距離は D_i です。あなたは現在、木の根である頂点 1 にいます。
#上記の問題の解答時、タイムオーバーや上手く深さ優先探索とメモ化の処理が出来なかった為のメモ
#試しにchatgptとリートンでコードを質問して得たコードで試したコード
#問題のフォーム
#N
#S_1 T_1 D_1
#S_2 T_2 D_2
#...
#S_{N-1} T_{N-1} D_{N-1}
#・ 1 行目に、木の頂点の数が与えられます。
#・ 2 行目から N 行目にかけて、辺が与えられます。
#具体的な出題
6
1 2 3
1 3 1
2 4 2
2 5 1
3 6 1

#回答
0
3
1
5
4
2

import sys
sys.setrecursionlimit(10**6)  # 再帰の深さの上限を設定

def dfs(node, parent, graph, memorize):
    for e in graph[node]:
        if e["to"] == parent:
            continue
        memorize[e["to"]] = memorize[node] + e["dist"]
        dfs(e["to"], node, graph, memorize)

def main():
    n = int(input())
    graph = [[] for _ in range(n)]
    for _ in range(n - 1):
        s, t, d = map(int, input().split())
        # 辺の追加
        graph[s - 1].append({"to": t - 1, "dist": d})
        graph[t - 1].append({"to": s - 1, "dist": d})

    memorize = [0] * n
    dfs(0, -1, graph, memorize)

    for i in range(n):
        print(memorize[i])

if __name__ == "__main__":
    main()
